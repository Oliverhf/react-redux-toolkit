{"ast":null,"code":"var _jsxFileName = \"/Users/oliverfavalli/Desktop/development-study/react-redux/react-redux-toolkit/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport CartContainer from './components/CartContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { calculateTotals, getCartItems } from './features/cart/cartSlice';\nimport Modal from './components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    cartItems,\n    isLoading\n  } = useSelector(store => store.cart);\n  const {\n    isOpen\n  } = useSelector(store => store.modal);\n  useEffect(() => {\n    dispatch(calculateTotals());\n  }, [cartItems]);\n  useEffect(() => {\n    dispatch(getCartItems('random'));\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [isOpen && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IaqB6mT3ogp087yvfrysdITm5C4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/oliverfavalli/Desktop/development-study/react-redux/react-redux-toolkit/src/App.js"],"names":["React","useEffect","Navbar","CartContainer","useDispatch","useSelector","calculateTotals","getCartItems","Modal","App","dispatch","cartItems","isLoading","store","cart","isOpen","modal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,2BAA9C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACG,KAAlB,CAA9B;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACD,GAFQ,EAEN,CAACK,SAAD,CAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACH,YAAY,CAAC,QAAD,CAAb,CAAR;AACD,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAGK,SAAH,EAAc;AACZ,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,eACGG,MAAM,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADb,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA9BQN,G;UACUL,W,EACgBC,W,EACdA,W;;;KAHZI,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport Navbar from './components/Navbar'\nimport CartContainer from './components/CartContainer';\nimport {useDispatch, useSelector} from 'react-redux'\nimport { calculateTotals, getCartItems } from './features/cart/cartSlice';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const { cartItems, isLoading } = useSelector((store) => store.cart)\n  const { isOpen } = useSelector((store) => store.modal)\n\n\n  useEffect(() => {\n    dispatch(calculateTotals())\n  }, [cartItems])\n\n  useEffect(() => {\n    dispatch(getCartItems('random'))\n  },[])\n  \n  if(isLoading) {\n    return (\n      <div className='loading'>\n        <h1>Loading...</h1>\n      </div>\n    )\n  }\n\n  return (\n    <main>\n      {isOpen && <Modal />}\n      <Navbar />\n      <CartContainer />\n    </main>\n  )\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}